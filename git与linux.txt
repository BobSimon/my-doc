1区域
本地工作区
临时存储区
暂存区（版本区，本地仓库）
远程仓库区

2git status
输出本地工作区和临时存储区的变更

3git add
git add .		加入新增文件和修改文件到临时存储区
git add -u 		加入修改文件和删除文件到临时存储区
git add -A		加入任何变更的文件（修改，新增，删除）到临时存储区

4git commit -m 提交备注
提交代码，这个没什么好说的

5git log
查看提交历史

6补充提交和修改提交备注
git commit --amend

7撤销临时区域
git reset HEAD 文件名

8撤销文件修改（撤回的是工作区）
git checkout -- 文件名

9查看分支
git branch					查看本地分支
git branch -a				查看所有分支

10查看远程仓库
git remote

11添加远程仓库
git remote add 远程仓库名	url

12推送(更新)
git push 远程仓库	远程分支名
git push 远程仓库	本地分支名:远程分支名

13创建分支和切换分支
git checkout -b 分支名				创建并马上切换到该分支
git branch 分支名					创建分支，不切换
git checkout 分支名					切换到这个分支

14重置指针和工作区（硬应用慎用）
git reset --hard 版本号
git reset --hard 远程仓库名/远程分支名				将当前分支重置为远程分支

15重置，保留工作区（默认是软应用）
git reset --soft 版本号

16重置索引
git reset --mixed 版本号


17变基（慎用）
rebase

18摘取
git cherry-pick 版本号





************************************个人git的一些常识*********************************************************
git status    -- 查看状态
git log   -- 查看日志
git branch  -- 查看现在的版本
git checkout -b  分支的名称    -- 检出某个分支
git merge  分支名      -- 把该分支合并到当前所在的分支
git pull 分支名  -- 拉取远程仓库的代码

-----------------------我之前所做的操作是----------------------------------------
git add .   -- 提交所有有改变的文件
git commit -m "提交的详细说明"   
git push  origin master    
---------------------------------------------------------------------------------

下面有个这样的场景，我本地的分支名叫bob，对应的远程仓库的分支是hotfix，我现在要做的是把本地dev，
 远程仓库也叫dev的分支合并到远程仓库的hotfix，假如我现在本地所在的分支是dev，那现在开始合并的操作是，
git checkout bob   -- 切换到bob分支下
git merge dev:dev 这样写其实也是可以的， git merge dev   
  -- 因为这里本地的和远程仓库的名字都是dev，这是在本地把dev分支合并到bob:hotfix分支；
git push origin  bob:hotfix    
 --这是表示把本地合并好的提交到远程hotfix，因为hotfix对应的本地的是bob,所以提交的时候提交的时候一定要写 bob:hotfix;





-------------------------linux的相关内容----------------------------
在这我使用的xshell工具，在本地把文件弄成 xx.zip；
拖到服务器上的后，我们需要解压，
unzip  xx.zip    -- 解压后就是xx文件了


打包命令：
还有在用xshell的时候在服务器上时候，比如我在服务器10.4.2.10上，
  我要该服务器的文件传到我的windows本地，输入命令 sz tomcat.tar
  然后会弹框要你选择在本机电脑的路径，这样就可以把服务器的文件传到windows了；


-------------------------------------------------------------------











